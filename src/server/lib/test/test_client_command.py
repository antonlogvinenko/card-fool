import client_command
import server_parser
import tester

class Test(tester.Test):
    def __init__(self):
        self.testing_module = client_command
        p = server_parser.Server_Parser()
        self.test_Client_Command = [
[p.parse_command('''command=createGame&uid=7&gameName=GreatBoom&numberOfPlayers=3&retransfer=true&firstAttack5Cards=true&attack6Cards=true'''),
'is_valid',
[],
'True'],
[p.parse_command('''command=KILL_PRESIDENT&uid=7&gameName=GreatBoom&numberOfPlayers=3&retransfer=true&firstAttack5Cards=true&attack6Cards=true'''),
'is_valid',
[],
'False'],
[p.parse_command('''command=createGame&uid=7&gameName=GreatBoom&numberOfPlayers=3&retransfer=true&firstAttack5Cards=true&attack6Cards=true'''),
'get_type',
[],
'createGame'],
[p.parse_command('''command=createGame&uid=7&gameName=GreatBoom&numberOfPlayers=3&retransfer=true&firstAttack5Cards=true&attack6Cards=true'''),
'get_uid',
[],
'7'],
[p.parse_command('''command=createGame&uid=7&gameName=GreatBoom&numberOfPlayers=3&retransfer=true&firstAttack5Cards=true&attack6Cards=true'''),
'get_game_name',
[],
'GreatBoom'],
[p.parse_command('''command=createGame&uid=7&gameName=GreatBoom&numberOfPlayers=3&retransfer=true&firstAttack5Cards=true&attack6Cards=true'''),
'get_number_of_players',
[],
'3'],
[p.parse_command('''command=cover&uid=565&cards=[h6'Killer'<h7][s6<s7]'''),
'get_cards',
[],
"[h6'Killer'<h7][s6<s7]"
],
[p.parse_command('''command=attack&uid=555&cards=[h6][s6]'''),
'get_cards',
[],
'[h6, s6]'],
[p.parse_command('''command=retransfer&uid=645&cards=[h6][s6]'''),
'get_cards',
[],
'[h6, s6]'],
[p.parse_command('''command=createGame&uid=7&gameName=GreatBoom&numberOfPlayers=3&retransfer=true&firstAttack5Cards=true&attack6Cards=true'''),
'get_first5',
[],
'True'],
[p.parse_command('''command=createGame&uid=7&gameName=GreatBoom&numberOfPlayers=3&retransfer=true&firstAttack5Cards=true&attack6Cards=true'''),
'get_attack6',
[],
'True'],
[p.parse_command('''command=attack&uid=555&cards=[h6][s6]'''),
'whose_card',
['h8'],
''],
[p.parse_command('''command=attack&uid=555&cards=[h6][s6]'''),
'whose_card',
['h6'],
''],
[p.parse_command('''command=cover&uid=565&cards=[h6'Killer'<h7][s6<s7]'''),
'whose_card',
['h6'],
'Killer'],
[p.parse_command('''command=cover&uid=565&cards=[h6'Killer'<h7'Anton'][s6<s7]'''),
'whose_card',
['h7'],
'Anton'],
[p.parse_command('''command=cover&uid=565&cards=[h6'Killer'<h7][s6<s7]'''),
'how_covered',
['h6'],
'h7'],
[p.parse_command('''command=cover&uid=565&cards=[h6'Killer'<h7][s6<s7]'''),
'how_covered',
['s6'],
's7'],
[p.parse_command('''command=cover&uid=565&cards=[h6'Killer'<h7'Anton'][s6<s7]'''),
'what_covers',
['h7'],
"h6'Killer'"],
[p.parse_command('''command=cover&uid=565&cards=[h6'Killer'<h7][s6<s7]'''),
'what_covers',
['s7'],
's6'],
]
        self.class_names = ['Client_Command']


test = Test()
test.run_tests()